{"remainingRequest":"/home/corentin/ProjetPerso/LearnTheCall/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/corentin/ProjetPerso/LearnTheCall/src/views/Game.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/corentin/ProjetPerso/LearnTheCall/src/views/Game.vue","mtime":1543931787340},{"path":"/home/corentin/ProjetPerso/LearnTheCall/node_modules/cache-loader/dist/cjs.js","mtime":1538306830046},{"path":"/home/corentin/ProjetPerso/LearnTheCall/node_modules/vue-loader/lib/index.js","mtime":1538306832257}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar allWrongAnswer = [\n  \"BedRoom\",\n  \"Wine Cellar\",\n  \"Garage\",\n  \"Fireplace HallWay\",\n  \"Office\",\n  \"Gaming Room\",\n  \"Gaming Room Corridor\",\n  \"Storage Room\",\n  \"Cctv\",\n  \"Snowmobile Garage\"\n];\n\nimport store from \"@/store/store.js\";\nimport axios from \"axios\";\nimport Router from \"vue-router\";\nimport FooterLTC from \"@/views/components/Footer\";\nimport ToolbarLTC from \"@/views/components/Toolbar\";\n\nexport default {\n  name: \"game\",\n  components: { ToolbarLTC },\n  data() {\n    return {\n      allImages: [],\n      allAnswer: [],\n      correct: [],\n      responseImg: \"\",\n      activeImage: \"chalet00.jpg\",\n      gameFinish: false,\n      userPoint: 0\n    };\n  },\n  mounted() {\n    const auth = {\n      headers: { Authorization: \"bearer \" + store.state.token }\n    };\n    axios\n      .get(\"http://54.38.184.10:5000/api/getImageInFolder\", auth)\n      .then(response => {\n        if (response.data.message == \"Error\") {\n          console.log(\"Error to get Images !\");\n        } else {\n          this.allImages = response.data.message;\n          console.log(this.allImages);\n          this.pickOneImage();\n          this.gameFinish = false;\n        }\n      })\n      .catch(err => {});\n    this.pickOneImage();\n    console.log(this.$router.currentRoute);\n  },\n  methods: {\n    pickOneImage() {\n      for (var i = 0; i < 4; i++) this.correct.pop();\n      if (this.allImages.length > 0) {\n        let i = this.randomNumber(this.allImages.length);\n        let stock = this.allImages[i];\n        this.allImages.splice(this.allImages.indexOf(stock), 1);\n        this.activeImage = stock;\n        console.log(\"stock = \" + stock);\n        this.getThisImage(stock);\n      } else {\n        console.log(\"Il n'y a plus d'images a afficher !\");\n        this.gameFinish = true;\n        console.log(\"gamefinish =\", this.gameFinish);\n      }\n    },\n    clickOnAnswer(response, index) {\n      console.log(\"la reponse cliqué est =\", response);\n      if (response == this.responseImg) this.userPoint += 1;\n      var pos;\n      for (pos = 0; pos < this.allAnswer.length; pos++) {\n        if (this.responseImg == this.allAnswer[pos]) break;\n      }\n      for (var i = 0; i < 4; i++) {\n        if (pos == i) this.correct.push(\"2\");\n        else this.correct.push(\"1\");\n      }\n      console.log(\"correct == \", this.correct);\n      var self = this;\n      setTimeout(function() {\n        self.pickOneImage();\n      }, 500);\n    },\n    randomNumber(max) {\n      return Math.floor(Math.random() * (max - 1 + 1));\n    },\n    mixArray(a) {\n      var j, x, i;\n      for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n      }\n      return a;\n    },\n    getThisImage(ImageName) {\n      axios\n        .post(\"http://54.38.184.10:5000/api/getThisImage\", {\n          headers: { Authorization: \"bearer \" + store.state.token },\n          body: ImageName\n        })\n        .then(response => {\n          if (response.data.message == \"Error\") {\n            console.log(\"Error to get this Image !\");\n            this.responseImg = \"Nothing\";\n          } else {\n            this.responseImg = response.data.message.goodAnswer;\n            this.allAnswer = this.getWrongAnswer();\n            this.allAnswer.push(this.responseImg);\n            this.allAnswer = this.mixArray(this.allAnswer);\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    },\n    getWrongAnswer() {\n      var tab = allWrongAnswer.slice();\n      console.log(tab);\n      var res = [];\n      for (var i = 0; i < 3; i++) {\n        var rdm = this.randomNumber(tab.length);\n        res[i] = tab[rdm];\n        tab.splice(tab.indexOf(res[i]), 1);\n      }\n      return res;\n    }\n  }\n};\n",{"version":3,"sources":["Game.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Game.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <main>\n    <v-app dark>\n      <toolbar-l-t-c></toolbar-l-t-c>\n      <h1>RAINBOW SIX SIEGE</h1>\n      <div id=\"GameContainer\" v-if=\"!gameFinish\">\n        <div class=\"GameItem\">\n            <img v-bind:src=\"require(`@/assets/ImageR6/${activeImage}`)\" style=\"max-width: 100%; width: 900px;\">\n        </div>\n        <div class=\"GameItem\">\n          <div class=\"ResponseItem\" @click=\"clickOnAnswer(allAnswer[0], 0)\" :class=\"{badResponse: correct[0] == 1, goodResponse: correct[0] == 2}\">\n            <p style=\"text-align: center;\">{{allAnswer[0]}}</p>\n          </div>\n          <div class=\"ResponseItem\" @click=\"clickOnAnswer(allAnswer[1], 1)\" :class=\"{badResponse: correct[1] == 1, goodResponse: correct[1] == 2}\" >\n            <p style=\"text-align: center;\">{{allAnswer[1]}}</p>\n          </div>\n          <div class=\"ResponseItem\" @click=\"clickOnAnswer(allAnswer[2], 2)\" :class=\"{badResponse: correct[2] == 1, goodResponse: correct[2] == 2}\">\n            <p style=\"text-align: center;\">{{allAnswer[2]}}</p>\n          </div>\n          <div class=\"ResponseItem\" @click=\"clickOnAnswer(allAnswer[3], 3)\" :class=\"{badResponse: correct[3] == 1, goodResponse: correct[3] == 2}\">\n            <p style=\"text-align: center;\">{{allAnswer[3]}}</p>\n          </div>\n        </div>\n      </div>\n      <div v-else>\n        <p>c'est fini xd</p>\n        <h1>tu as fait {{userPoint}} bonne réponse !</h1>\n        <v-btn :to=\"{ name: 'menu' }\" flat color=\"orange\">Retour</v-btn>\n      </div>\n    </v-app>\n  </main>\n</template>\n\n<script>\nvar allWrongAnswer = [\n  \"BedRoom\",\n  \"Wine Cellar\",\n  \"Garage\",\n  \"Fireplace HallWay\",\n  \"Office\",\n  \"Gaming Room\",\n  \"Gaming Room Corridor\",\n  \"Storage Room\",\n  \"Cctv\",\n  \"Snowmobile Garage\"\n];\n\nimport store from \"@/store/store.js\";\nimport axios from \"axios\";\nimport Router from \"vue-router\";\nimport FooterLTC from \"@/views/components/Footer\";\nimport ToolbarLTC from \"@/views/components/Toolbar\";\n\nexport default {\n  name: \"game\",\n  components: { ToolbarLTC },\n  data() {\n    return {\n      allImages: [],\n      allAnswer: [],\n      correct: [],\n      responseImg: \"\",\n      activeImage: \"chalet00.jpg\",\n      gameFinish: false,\n      userPoint: 0\n    };\n  },\n  mounted() {\n    const auth = {\n      headers: { Authorization: \"bearer \" + store.state.token }\n    };\n    axios\n      .get(\"http://54.38.184.10:5000/api/getImageInFolder\", auth)\n      .then(response => {\n        if (response.data.message == \"Error\") {\n          console.log(\"Error to get Images !\");\n        } else {\n          this.allImages = response.data.message;\n          console.log(this.allImages);\n          this.pickOneImage();\n          this.gameFinish = false;\n        }\n      })\n      .catch(err => {});\n    this.pickOneImage();\n    console.log(this.$router.currentRoute);\n  },\n  methods: {\n    pickOneImage() {\n      for (var i = 0; i < 4; i++) this.correct.pop();\n      if (this.allImages.length > 0) {\n        let i = this.randomNumber(this.allImages.length);\n        let stock = this.allImages[i];\n        this.allImages.splice(this.allImages.indexOf(stock), 1);\n        this.activeImage = stock;\n        console.log(\"stock = \" + stock);\n        this.getThisImage(stock);\n      } else {\n        console.log(\"Il n'y a plus d'images a afficher !\");\n        this.gameFinish = true;\n        console.log(\"gamefinish =\", this.gameFinish);\n      }\n    },\n    clickOnAnswer(response, index) {\n      console.log(\"la reponse cliqué est =\", response);\n      if (response == this.responseImg) this.userPoint += 1;\n      var pos;\n      for (pos = 0; pos < this.allAnswer.length; pos++) {\n        if (this.responseImg == this.allAnswer[pos]) break;\n      }\n      for (var i = 0; i < 4; i++) {\n        if (pos == i) this.correct.push(\"2\");\n        else this.correct.push(\"1\");\n      }\n      console.log(\"correct == \", this.correct);\n      var self = this;\n      setTimeout(function() {\n        self.pickOneImage();\n      }, 500);\n    },\n    randomNumber(max) {\n      return Math.floor(Math.random() * (max - 1 + 1));\n    },\n    mixArray(a) {\n      var j, x, i;\n      for (i = a.length - 1; i > 0; i--) {\n        j = Math.floor(Math.random() * (i + 1));\n        x = a[i];\n        a[i] = a[j];\n        a[j] = x;\n      }\n      return a;\n    },\n    getThisImage(ImageName) {\n      axios\n        .post(\"http://54.38.184.10:5000/api/getThisImage\", {\n          headers: { Authorization: \"bearer \" + store.state.token },\n          body: ImageName\n        })\n        .then(response => {\n          if (response.data.message == \"Error\") {\n            console.log(\"Error to get this Image !\");\n            this.responseImg = \"Nothing\";\n          } else {\n            this.responseImg = response.data.message.goodAnswer;\n            this.allAnswer = this.getWrongAnswer();\n            this.allAnswer.push(this.responseImg);\n            this.allAnswer = this.mixArray(this.allAnswer);\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    },\n    getWrongAnswer() {\n      var tab = allWrongAnswer.slice();\n      console.log(tab);\n      var res = [];\n      for (var i = 0; i < 3; i++) {\n        var rdm = this.randomNumber(tab.length);\n        res[i] = tab[rdm];\n        tab.splice(tab.indexOf(res[i]), 1);\n      }\n      return res;\n    }\n  }\n};\n</script>\n\n<style>\n/* Pour cacher la scrollbar de droite ... */\n::-webkit-scrollbar {\n  width: 0px;\n  background: transparent;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #ff0000;\n}\n/* fin */\n\n.goodResponse {\n  background-color: green !important;\n}\n\n.badResponse {\n  background-color: red !important;\n}\n\n.ResponseItem:hover {\n  background-color: black;\n  opacity: 0.4;\n}\n\n/* FlexBox */\n#GameContainer {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-around;\n}\n\n.gameItem {\n  display: flex;\n  flex-direction: column;\n}\n\n.ResponseItem {\n  border: 1px solid white;\n  font-size: 20px;\n  height: 100px;\n}\n/* FlexBox */\n</style>"]}]}